{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","ShellBar","primaryTitle","ShellBarItem","text","icon","Avatar","initials","AvatarGroup","Badge","BusyIndicator","active","Button","Calendar","Card","Carousel","CheckBox","ComboBox","ComboBoxItem","DatePicker","DateRangePicker","DateTimePicker","Dialog","DurationPicker","FileUploader","Icon","name","Input","placeholder","SuggestionItem","Label","Link","List","GroupHeaderListItem","StandardListItem","CustomListItem","MessageStrip","MultiComboBox","MultiComboBoxItem","MultiInput","tokens","Token","Panel","headerText","Popover","ProgressIndicator","value","RadioButton","RangeSlider","RatingIndicator","ResponsivePopover","SegmentedButton","ToggleButton","pressed","Select","Option","Slider","Switch","TabContainer","Tab","TabSeparator","Table","columns","TableColumn","TableRow","TableCell","TextArea","Title","TimePicker","Toast","Tree","TreeItem","Bar","startContent","middleContent","endContent","FlexibleColumnLayout","layout","FCLLayout","ThreeColumnsMidExpandedEndHidden","startColumn","midColumn","endColumn","NotificationListGroupItem","heading","NotificationListItem","actions","NotificationAction","ProductSwitch","ProductSwitchItem","SideNavigation","SideNavigationItem","SideNavigationSubItem","Timeline","TimelineItem","titleText","UploadCollection","UploadCollectionItem","fileName","uploadState","Wizard","WizardStep","selected","disabled","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6700ed5f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Avatar } from \"@ui5/webcomponents-react/lib/Avatar\";\nimport { AvatarGroup } from \"@ui5/webcomponents-react/lib/AvatarGroup\";\nimport { Badge } from \"@ui5/webcomponents-react/lib/Badge\";\nimport { BusyIndicator } from \"@ui5/webcomponents-react/lib/BusyIndicator\";\nimport { Button } from \"@ui5/webcomponents-react/lib/Button\";\nimport { Calendar } from \"@ui5/webcomponents-react/lib/Calendar\";\nimport { Card } from \"@ui5/webcomponents-react/lib/Card\";\nimport { Carousel } from \"@ui5/webcomponents-react/lib/Carousel\";\nimport { CheckBox } from \"@ui5/webcomponents-react/lib/CheckBox\";\nimport { ComboBox } from \"@ui5/webcomponents-react/lib/ComboBox\";\nimport { ComboBoxItem } from \"@ui5/webcomponents-react/lib/ComboBoxItem\";\nimport { CustomListItem } from \"@ui5/webcomponents-react/lib/CustomListItem\";\nimport { DatePicker } from \"@ui5/webcomponents-react/lib/DatePicker\";\nimport { DateRangePicker } from \"@ui5/webcomponents-react/lib/DateRangePicker\";\nimport { DateTimePicker } from \"@ui5/webcomponents-react/lib/DateTimePicker\";\nimport { Dialog } from \"@ui5/webcomponents-react/lib/Dialog\";\nimport { DurationPicker } from \"@ui5/webcomponents-react/lib/DurationPicker\";\nimport { FileUploader } from \"@ui5/webcomponents-react/lib/FileUploader\";\nimport { GroupHeaderListItem } from \"@ui5/webcomponents-react/lib/GroupHeaderListItem\";\nimport { Icon } from \"@ui5/webcomponents-react/lib/Icon\";\nimport { Input } from \"@ui5/webcomponents-react/lib/Input\";\nimport { Label } from \"@ui5/webcomponents-react/lib/Label\";\nimport { Link } from \"@ui5/webcomponents-react/lib/Link\";\nimport { List } from \"@ui5/webcomponents-react/lib/List\";\nimport { MessageStrip } from \"@ui5/webcomponents-react/lib/MessageStrip\";\nimport { MultiComboBox } from \"@ui5/webcomponents-react/lib/MultiComboBox\";\nimport { MultiComboBoxItem } from \"@ui5/webcomponents-react/lib/MultiComboBoxItem\";\nimport { MultiInput } from \"@ui5/webcomponents-react/lib/MultiInput\";\nimport { Option } from \"@ui5/webcomponents-react/lib/Option\";\nimport { Panel } from \"@ui5/webcomponents-react/lib/Panel\";\nimport { Popover } from \"@ui5/webcomponents-react/lib/Popover\";\nimport { ProgressIndicator } from \"@ui5/webcomponents-react/lib/ProgressIndicator\";\nimport { RadioButton } from \"@ui5/webcomponents-react/lib/RadioButton\";\nimport { RangeSlider } from \"@ui5/webcomponents-react/lib/RangeSlider\";\nimport { RatingIndicator } from \"@ui5/webcomponents-react/lib/RatingIndicator\";\nimport { ResponsivePopover } from \"@ui5/webcomponents-react/lib/ResponsivePopover\";\nimport { SegmentedButton } from \"@ui5/webcomponents-react/lib/SegmentedButton\";\nimport { Select } from \"@ui5/webcomponents-react/lib/Select\";\nimport { Slider } from \"@ui5/webcomponents-react/lib/Slider\";\nimport { StandardListItem } from \"@ui5/webcomponents-react/lib/StandardListItem\";\nimport { SuggestionItem } from \"@ui5/webcomponents-react/lib/SuggestionItem\";\nimport { Switch } from \"@ui5/webcomponents-react/lib/Switch\";\nimport { Tab } from \"@ui5/webcomponents-react/lib/Tab\";\nimport { TabContainer } from \"@ui5/webcomponents-react/lib/TabContainer\";\nimport { TabSeparator } from \"@ui5/webcomponents-react/lib/TabSeparator\";\nimport { Table } from \"@ui5/webcomponents-react/lib/Table\";\nimport { TableCell } from \"@ui5/webcomponents-react/lib/TableCell\";\nimport { TableColumn } from \"@ui5/webcomponents-react/lib/TableColumn\";\nimport { TableRow } from \"@ui5/webcomponents-react/lib/TableRow\";\nimport { TextArea } from \"@ui5/webcomponents-react/lib/TextArea\";\nimport { TimePicker } from \"@ui5/webcomponents-react/lib/TimePicker\";\nimport { Title } from \"@ui5/webcomponents-react/lib/Title\";\nimport { Toast } from \"@ui5/webcomponents-react/lib/Toast\";\nimport { ToggleButton } from \"@ui5/webcomponents-react/lib/ToggleButton\";\nimport { Token } from \"@ui5/webcomponents-react/lib/Token\";\nimport { Tree } from \"@ui5/webcomponents-react/lib/Tree\";\nimport { TreeItem } from \"@ui5/webcomponents-react/lib/TreeItem\";\nimport { Bar } from \"@ui5/webcomponents-react/lib/Bar\";\nimport { FlexibleColumnLayout } from \"@ui5/webcomponents-react/lib/FlexibleColumnLayout\";\nimport { NotificationAction } from \"@ui5/webcomponents-react/lib/NotificationAction\";\nimport { NotificationListGroupItem } from \"@ui5/webcomponents-react/lib/NotificationListGroupItem\";\nimport { NotificationListItem } from \"@ui5/webcomponents-react/lib/NotificationListItem\";\nimport { ProductSwitch } from \"@ui5/webcomponents-react/lib/ProductSwitch\";\nimport { ProductSwitchItem } from \"@ui5/webcomponents-react/lib/ProductSwitchItem\";\nimport { ShellBar } from \"@ui5/webcomponents-react/lib/ShellBar\";\nimport { ShellBarItem } from \"@ui5/webcomponents-react/lib/ShellBarItem\";\nimport { SideNavigation } from \"@ui5/webcomponents-react/lib/SideNavigation\";\nimport { SideNavigationItem } from \"@ui5/webcomponents-react/lib/SideNavigationItem\";\nimport { SideNavigationSubItem } from \"@ui5/webcomponents-react/lib/SideNavigationSubItem\";\nimport { Timeline } from \"@ui5/webcomponents-react/lib/Timeline\";\nimport { TimelineItem } from \"@ui5/webcomponents-react/lib/TimelineItem\";\nimport { UploadCollection } from \"@ui5/webcomponents-react/lib/UploadCollection\";\nimport { UploadCollectionItem } from \"@ui5/webcomponents-react/lib/UploadCollectionItem\";\nimport { Wizard } from \"@ui5/webcomponents-react/lib/Wizard\";\nimport { WizardStep } from \"@ui5/webcomponents-react/lib/WizardStep\";\nimport { FCLLayout } from \"@ui5/webcomponents-react/lib/FCLLayout\";\n\nimport \"@ui5/webcomponents-icons/dist/add\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"flexBox\">\n      <ShellBar primaryTitle=\"UI5 Web Components for React Template\">\n        <ShellBarItem text=\"123\" icon=\"add\" />\n      </ShellBar>\n\n      <Avatar initials=\"A\" />\n      <AvatarGroup>\n        <Avatar initials=\"A\" />\n        <Avatar initials=\"B\" />\n        <Avatar initials=\"C\" />\n      </AvatarGroup>\n\n      <Badge>Badge</Badge>\n\n      <BusyIndicator active />\n\n      <Button>Button</Button>\n\n      <Calendar />\n\n      <Card>My Card Content</Card>\n\n      <Carousel>\n        <div>1</div>\n        <div>2</div>\n        <div>3</div>\n      </Carousel>\n\n      <CheckBox />\n\n      <ComboBox>\n        <ComboBoxItem>123</ComboBoxItem>\n      </ComboBox>\n\n      <DatePicker />\n\n      <DateRangePicker />\n\n      <DateTimePicker />\n\n      <Dialog>\n        <div>My Dialog Content</div>\n      </Dialog>\n\n      <DurationPicker />\n\n      <FileUploader />\n\n      <Icon name=\"add\" />\n\n      <Input placeholder=\"Input\">\n        <SuggestionItem>123</SuggestionItem>\n      </Input>\n\n      <Label>Label</Label>\n\n      <Link>Link</Link>\n\n      <List>\n        <GroupHeaderListItem>Group Header</GroupHeaderListItem>\n        <StandardListItem>Standard</StandardListItem>\n        <CustomListItem>Custom</CustomListItem>\n      </List>\n\n      <MessageStrip>Message Strip</MessageStrip>\n\n      <MultiComboBox>\n        <MultiComboBoxItem>MultiComboBoxItem</MultiComboBoxItem>\n      </MultiComboBox>\n\n      <MultiInput\n        tokens={\n          <>\n            <Token text=\"Token\" />\n          </>\n        }\n      />\n\n      <Panel headerText=\"Panel\">My Panel Content</Panel>\n\n      <Popover>Popover</Popover>\n\n      <ProgressIndicator value={50} />\n\n      <RadioButton text=\"Radio Button\" />\n\n      <RangeSlider />\n\n      <RatingIndicator />\n\n      <ResponsivePopover>Responsive Popover</ResponsivePopover>\n\n      <SegmentedButton>\n        <ToggleButton pressed>1</ToggleButton>\n        <ToggleButton>2</ToggleButton>\n        <ToggleButton>3</ToggleButton>\n      </SegmentedButton>\n\n      <Select>\n        <Option>1</Option>\n      </Select>\n\n      <Slider />\n\n      <Switch />\n\n      <TabContainer>\n        <Tab text=\"123\"></Tab>\n        <TabSeparator />\n        <Tab text=\"567\"></Tab>\n      </TabContainer>\n\n      <Table\n        columns={\n          <>\n            <TableColumn>C1</TableColumn>\n            <TableColumn>C2</TableColumn>\n          </>\n        }\n      >\n        <TableRow>\n          <TableCell>1</TableCell>\n          <TableCell>2</TableCell>\n        </TableRow>\n      </Table>\n\n      <TextArea />\n\n      <Title>Title</Title>\n\n      <TimePicker />\n\n      <Toast>My Toast</Toast>\n\n      <Tree>\n        <TreeItem text=\"Tree 1\">\n          <TreeItem text=\"Tree 1.1\" />\n        </TreeItem>\n      </Tree>\n\n      <Bar\n        startContent={<span>Left</span>}\n        middleContent={<span>Middle</span>}\n        endContent={<span>End Content</span>}\n      />\n\n      <FlexibleColumnLayout\n        layout={FCLLayout.ThreeColumnsMidExpandedEndHidden}\n        startColumn={<span>Left</span>}\n        midColumn={<span>Middle</span>}\n        endColumn={<span>End Content</span>}\n      />\n\n      <List>\n        <NotificationListGroupItem heading=\"Orders\">\n          <NotificationListItem\n            heading=\"New Order\"\n            actions={<NotificationAction text=\"OK\" />}\n          >\n            NotificationListItem\n          </NotificationListItem>\n        </NotificationListGroupItem>\n      </List>\n\n      <ProductSwitch>\n        <ProductSwitchItem icon=\"add\" heading=\"ProductSwitchItem\" />\n      </ProductSwitch>\n\n      <SideNavigation>\n        <SideNavigationItem text=\"SideNavigationItem\">\n          <SideNavigationSubItem text=\"SideNavigationSubItem\" />\n        </SideNavigationItem>\n      </SideNavigation>\n\n      <Timeline>\n        <TimelineItem titleText=\"TimelineItem\" />\n        <TimelineItem titleText=\"TimelineItem 2\" />\n      </Timeline>\n\n      <UploadCollection>\n        <UploadCollectionItem fileName=\"Laptop\" uploadState=\"Complete\">\n          Uploaded By: David Keane · Uploaded On: 2014-07-26 · File Size: 35 KB\n        </UploadCollectionItem>\n      </UploadCollection>\n\n      <Wizard>\n        <WizardStep selected heading=\"Wizard Step 1\">\n          Wizard!\n        </WizardStep>\n        <WizardStep disabled heading=\"Wizard Step 2\">\n          Wizard 2!\n        </WizardStep>\n      </Wizard>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}