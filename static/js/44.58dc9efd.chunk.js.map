{"version":3,"sources":["../node_modules/@ui5/webcomponents-base/dist/delegate/NativeResize.js","../node_modules/@ui5/webcomponents-base/dist/delegate/CustomResize.js","../node_modules/@ui5/webcomponents-base/dist/delegate/ResizeHandler.js","../node_modules/@ui5/webcomponents-base/dist/util/getActiveElement.js","../node_modules/@ui5/webcomponents-base/dist/delegate/ItemNavigation.js","../node_modules/@ui5/webcomponents-base/dist/types/NavigationMode.js","../node_modules/@ui5/webcomponents-base/dist/types/ItemNavigationBehavior.js","../node_modules/@ui5/webcomponents/dist/types/AvatarSize.js","../node_modules/@ui5/webcomponents/dist/types/AvatarBackgroundColor.js","../node_modules/@ui5/webcomponents/dist/generated/templates/AvatarGroupTemplate.lit.js","../node_modules/@ui5/webcomponents/dist/generated/themes/AvatarGroup.css.js","../node_modules/@ui5/webcomponents/dist/types/AvatarGroupType.js","../node_modules/@ui5/webcomponents/dist/AvatarGroup.js"],"names":["NativeResize","resizeObserver","window","ResizeObserver","entries","forEach","entry","observedObjects","get","target","el","Map","ref","callback","observedDOMs","callbacks","length","observe","set","filteredCallbacks","filter","fn","unobserve","delete","CustomResize","initialized","resizeInterval","undefined","resizeListeners","observedObject","existingCallbacks","width","offsetWidth","height","offsetHeight","concat","initListener","size","setInterval","checkListeners","bind","checkSizes","_hasBeenRendered","updateSizes","sizes","newWidth","newHeight","oldHeight","oldWidth","listenerObject","Object","assign","clearInterval","ResizeHandler","Implementation","initialize","attachListener","call","detachListener","isUI5Element","getDomRef","getActiveElement","element","document","activeElement","shadowRoot","ItemNavigation","rootWebComponent","options","currentIndex","rowSize","behavior","ItemNavigationBehavior","Static","navigationMode","autoNavigation","NavigationMode","Auto","horizontalNavigationOn","Horizontal","verticalNavigationOn","Vertical","pageSize","affectedPropertiesNames","getItemsCallback","_getItems","trueFunction","_hasNextPage","hasNextPageCallback","_hasPreviousPage","hasPreviousPageCallback","addEventListener","onkeydown","_onComponentStateFinalized","_init","this","item","idx","_tabIndex","event","onOverflowBottomEdge","onOverflowTopEdge","preventDefault","RenderScheduler","whenFinished","update","focusCurrent","fireEvent","AFTER_FOCUS","isUp","_verticalNavigationOn","_handleUp","isDown","_handleDown","isLeft","_horizontalNavigationOn","_handleLeft","isRight","_handleRight","isHome","_handleHome","isEnd","_handleEnd","isPageUp","_handlePageUp","isPageDown","_handlePageDown","_canNavigate","_onKeyPress","homeEndRange","current","origItems","indexOf","items","slice","i","Array","isArray","propName","prop","currentItem","_getCurrentItem","focus","getFocusDomRef","querySelector","id","offset","Cyclic","Paging","_handleNextPage","BORDER_REACH","start","end","originalEvent","offsetRight","_handlePrevPage","val","EventProvider","AvatarSizes","XS","S","M","L","XL","AvatarSize","value","DataType","generateTypeAccessors","AvatarBackGroundColors","Accent1","Accent2","Accent3","Accent4","Accent5","Accent6","Accent7","Accent8","Accent9","Accent10","Placeholder","AvatarBackgroundColor","main","context","tags","suffix","setTags","setSuffix","html","_onkeyup","_onkeydown","_onfocusin","ifDefined","_groupTabIndex","_onGroupClick","_onUI5Click","_overflowBtnHidden","_overflowButtonTabIndex","_overflowButtonText","block0","registerThemeProperties","defaultThemeBase","defaultTheme","AvatarGroupTypes","Group","Individual","AvatarGroupType","OVERFLOW_BTN_CLASS","AVATAR_GROUP_OVERFLOW_BTN_SELECTOR","offsets","metadata","tag","managedSlots","properties","type","String","defaultValue","avatarSize","noAttribute","slots","HTMLElement","propertyName","events","click","detail","targetRef","overflowButtonClicked","Boolean","AvatarGroup","_itemNavigation","_isGroup","_hiddenStartIndex","_colorIndex","_hiddenItems","_onResizeHandler","_onResize","_overflowItems","_prepareAvatars","register","deregister","isEnter","_fireGroupEvent","isSpace","shiftKey","isOverflowButtonClicked","classList","contains","stopPropagation","isMarked","RTL","effectiveDir","avatar","index","colorIndex","_getNextBackgroundColor","interactive","getAttribute","setAttribute","_itemsCount","style","_effectiveSize","offsetParent","offsetLeft","hiddenItems","hidden","totalWidth","_getWidthToItem","_overflowButtonEffectiveWidth","_setHiddenItems","map","_effectiveBackgroundColor","_overflowButton","litRender","AvatarGroupTemplate","Button","UI5Element","define"],"mappings":"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","file":"static/js/44.58dc9efd.chunk.js","sourcesContent":["class NativeResize {\n\tstatic initialize() {\n\t\tNativeResize.resizeObserver = new window.ResizeObserver(entries => {\n\t\t\t// call attached callbacks\n\t\t\tentries.forEach(entry => {\n\t\t\t\tconst callbacks = NativeResize.observedObjects.get(entry.target);\n\n\t\t\t\tcallbacks.forEach(el => el());\n\t\t\t});\n\t\t});\n\n\t\tNativeResize.observedObjects = new Map();\n\t}\n\n\tstatic attachListener(ref, callback) {\n\t\tconst observedDOMs = NativeResize.observedObjects;\n\t\tconst callbacks = observedDOMs.get(ref) || [];\n\n\t\t// if no callbacks has been added for this ref - start observing it\n\t\tif (!callbacks.length) {\n\t\t\tNativeResize.resizeObserver.observe(ref);\n\t\t}\n\n\t\t// save the callbacks in an array\n\t\tobservedDOMs.set(ref, [...callbacks, callback]);\n\t}\n\n\tstatic detachListener(ref, callback) {\n\t\tconst callbacks = NativeResize.observedObjects.get(ref) || [];\n\t\tconst filteredCallbacks = callbacks.filter(fn => fn !== callback);\n\n\t\tif (!callbacks.length || (callbacks.length === filteredCallbacks.length && callbacks.length !== 0)) {\n\t\t\treturn;\n\t\t}\n\n\t\tNativeResize.observedObjects.set(ref, filteredCallbacks);\n\n\t\tif (!filteredCallbacks.length) {\n\t\t\tNativeResize.resizeObserver.unobserve(ref);\n\t\t\tNativeResize.observedObjects.delete(ref);\n\t\t}\n\t}\n}\n\nexport default NativeResize;\n","const INTERVAL = 300;\n\nclass CustomResize {\n\tstatic initialize() {\n\t\tCustomResize.initialized = false;\n\t\tCustomResize.resizeInterval = undefined;\n\t\tCustomResize.resizeListeners = new Map();\n\t}\n\n\tstatic attachListener(ref, callback) {\n\t\tconst observedObject = CustomResize.resizeListeners.get(ref);\n\t\tconst existingCallbacks = observedObject ? observedObject.callbacks : [];\n\n\t\tCustomResize.resizeListeners.set(ref, {\n\t\t\twidth: ref ? ref.offsetWidth : 0,\n\t\t\theight: ref ? ref.offsetHeight : 0,\n\t\t\tcallbacks: existingCallbacks.concat(callback),\n\t\t});\n\n\t\tCustomResize.initListener();\n\t}\n\n\tstatic initListener() {\n\t\tif (CustomResize.resizeListeners.size > 0 && !CustomResize.initialized) {\n\t\t\tCustomResize.resizeInterval = setInterval(CustomResize.checkListeners.bind(CustomResize), INTERVAL);\n\t\t}\n\t}\n\n\tstatic checkListeners() {\n\t\tCustomResize.resizeListeners.forEach((entry, ref) => {\n\t\t\tconst changed = CustomResize.checkSizes(entry, ref);\n\n\t\t\tif (changed || (entry && !entry._hasBeenRendered)) {\n\t\t\t\tCustomResize.updateSizes(entry, ref.offsetWidth, ref.offsetHeight);\n\t\t\t\tentry.callbacks.forEach(el => el());\n\t\t\t\tentry._hasBeenRendered = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic updateSizes(sizes, newWidth, newHeight) {\n\t\tsizes.width = newWidth;\n\t\tsizes.height = newHeight;\n\t}\n\n\tstatic checkSizes(entry, ref) {\n\t\tconst oldHeight = entry.height;\n\t\tconst oldWidth = entry.width;\n\t\tconst newHeight = ref.offsetHeight;\n\t\tconst newWidth = ref.offsetWidth;\n\n\t\treturn ((oldHeight !== newHeight) || oldWidth !== newWidth);\n\t}\n\n\tstatic detachListener(ref, callback) {\n\t\tconst listenerObject = CustomResize.resizeListeners.get(ref);\n\t\tconst callbacks = listenerObject ? listenerObject.callbacks : [];\n\t\tconst filteredCallbacks = callbacks.filter(fn => fn !== callback);\n\n\t\tif (!listenerObject || (callbacks.length === filteredCallbacks.length && callbacks.length !== 0)) {\n\t\t\treturn;\n\t\t}\n\n\t\tCustomResize.resizeListeners.set(ref, Object.assign(listenerObject, { callbacks: filteredCallbacks }));\n\n\t\tif (!filteredCallbacks.length) {\n\t\t\tlistenerObject.callbacks = null;\n\t\t\tCustomResize.resizeListeners.delete(ref);\n\t\t}\n\n\t\tif (CustomResize.resizeListeners.size === 0) {\n\t\t\tCustomResize.initialized = false;\n\t\t\tclearInterval(CustomResize.resizeInterval);\n\t\t}\n\t}\n}\n\nexport default CustomResize;\n","import NativeResize from \"./NativeResize.js\";\nimport CustomResize from \"./CustomResize.js\";\n\nclass ResizeHandler {\n\tstatic initialize() {\n\t\tResizeHandler.Implementation = window.ResizeObserver ? NativeResize : CustomResize;\n\t\tResizeHandler.Implementation.initialize();\n\t}\n\n\t/**\n\t * @static\n\t * @private\n\t * @param {*} ref Reference to be observed\n\t * @param {*} callback Callback to be executed\n\t * @memberof ResizeHandler\n\t */\n\tstatic attachListener(ref, callback) {\n\t\tResizeHandler.Implementation.attachListener.call(ResizeHandler.Implementation, ref, callback);\n\t}\n\n\t/**\n\t * @static\n\t * @private\n\t * @param {*} ref Reference to be unobserved\n\t * @memberof ResizeHandler\n\t */\n\tstatic detachListener(ref, callback) {\n\t\tResizeHandler.Implementation.detachListener.call(ResizeHandler.Implementation, ref, callback);\n\t}\n\n\n\t/**\n\t * @static\n\t * @public\n\t * @param {*} ref Reference to a UI5 Web Component or DOM Element to be observed\n\t * @param {*} callback Callback to be executed\n\t * @memberof ResizeHandler\n\t */\n\tstatic register(ref, callback) {\n\t\tif (ref.isUI5Element) {\n\t\t\tref = ref.getDomRef();\n\t\t}\n\n\t\tResizeHandler.attachListener(ref, callback);\n\t}\n\n\n\t/**\n\t * @static\n\t * @public\n\t * @param {*} ref Reference to UI5 Web Component or DOM Element to be unobserved\n\t * @memberof ResizeHandler\n\t */\n\tstatic deregister(ref, callback) {\n\t\tif (ref.isUI5Element) {\n\t\t\tref = ref.getDomRef();\n\t\t}\n\n\t\tResizeHandler.detachListener(ref, callback);\n\t}\n}\n\nResizeHandler.initialize();\n\nexport default ResizeHandler;\n","const getActiveElement = () => {\n\tlet element = document.activeElement;\n\n\twhile (element && element.shadowRoot && element.shadowRoot.activeElement) {\n\t\telement = element.shadowRoot.activeElement;\n\t}\n\n\treturn element;\n};\n\nexport default getActiveElement;\n","import RenderScheduler from \"../RenderScheduler.js\";\nimport {\n\tisDown,\n\tisUp,\n\tisLeft,\n\tisRight,\n\tisHome,\n\tisEnd,\n\tisPageUp,\n\tisPageDown,\n} from \"../Keys.js\";\nimport getActiveElement from \"../util/getActiveElement.js\";\n\nimport EventProvider from \"../EventProvider.js\";\nimport NavigationMode from \"../types/NavigationMode.js\";\nimport ItemNavigationBehavior from \"../types/ItemNavigationBehavior.js\";\n\n/**\n * The ItemNavigation class manages the calculations to determine the correct \"tabindex\" for a group of related items inside a root component.\n * Important: ItemNavigation only does the calculations and does not change \"tabindex\" directly, this is a responsibility of the developer.\n *\n * The keys that trigger ItemNavigation are:\n *  - Up/down\n *  - Left/right\n *  - Home/End\n *  - PageUp/PageDown\n *\n * Usage:\n * 1) Use the \"getItemsCallback\" constructor property to pass a callback to ItemNavigation, which, whenever called, will return the list of items to navigate among.\n *\n * Each item passed to ItemNavigation via \"getItemsCallback\" must be:\n *  - A) either a UI5Element with a \"_tabIndex\" property\n *  - B) or an Object with \"id\" and \"_tabIndex\" properties which represents a part of the root component's shadow DOM.\n *    The \"id\" must be a valid ID within the shadow root of the component ItemNavigation operates on.\n *    This object must not be a DOM object because, as said, ItemNavigation will not set \"tabindex\" on it. It must be a representation of a DOM object only\n *    and the developer has the responsibility to update the \"tabindex\" in the component's DOM.\n *  - C) a combination of the above\n *\n * Whenever the user navigates with the keyboard, ItemNavigation will modify the \"_tabIndex\" properties of the items.\n * It is the items' responsibilities to re-render themselves and apply the correct value of \"tabindex\" (i.e. to map the \"_tabIndex\" ItemNavigation set to them to the \"tabindex\" property).\n * If the items of the ItemNavigation are UI5Elements themselves, this can happen naturally since they will be invalidated by their \"_tabIndex\" property.\n * If the items are Objects with \"id\" and \"_tabIndex\" however, it is the developer's responsibility to apply these and the easiest way is to have the root component invalidated by ItemNavigation.\n * To do so, set the \"affectedPropertiesNames\" constructor property to point to one or more of the root component's properties that need refreshing when \"_tabIndex\" is changed deeply.\n *\n * 2) Call the \"update\" method of ItemNavigation whenever you want to change the current item.\n * This is most commonly required if the user for example clicks on an item and thus selects it directly.\n * Pass as the only argument to \"update\" the item that becomes current (must be one of the items, returned by \"getItemsCallback\").\n *\n * @class\n * @public\n */\nclass ItemNavigation extends EventProvider {\n\t/**\n\t *\n\t * @param rootWebComponent the component to operate on (component that slots or contains within its shadow root the items the user navigates among)\n\t * @param options Object with configuration options:\n\t *  - currentIndex: the index of the item that will be initially selected (from which navigation will begin)\n\t *  - navigationMode (Auto|Horizontal|Vertical): whether the items are displayed horizontally (Horizontal), vertically (Vertical) or as a matrix (Auto) meaning the user can navigate in both directions (up/down and left/right)\n\t *  - rowSize: tells how many items per row there are when the items are not rendered as a flat list but rather as a matrix. Relevant for navigationMode=Auto\n\t *  - behavior (Static|Cycling|Paging): tells what to do when trying to navigate beyond the first and last items\n\t *    Static means that nothing happens if the user tries to navigate beyond the first/last item.\n\t *    Cycling means that when the user navigates beyond the last item they go to the first and vice versa.\n\t *    Paging means that when the urse navigates beyond the first/last item, a new \"page\" of items appears (as commonly observed with calendars for example)\n\t *  - pageSize: tells how many items the user skips by using the PageUp/PageDown keys\n\t *  - getItemsCallback: function that, when called, returns an array with all items the user can navigate among\n\t *  - affectedPropertiesNames: a list of metadata properties on the root component which, upon user navigation, will be reassigned by address thus causing the root component to invalidate\n\t */\n\tconstructor(rootWebComponent, options = {}) {\n\t\tsuper();\n\n\t\tthis.currentIndex = options.currentIndex || 0;\n\t\tthis.rowSize = options.rowSize || 1;\n\t\tthis.behavior = options.behavior || ItemNavigationBehavior.Static;\n\t\tconst navigationMode = options.navigationMode;\n\t\tconst autoNavigation = !navigationMode || navigationMode === NavigationMode.Auto;\n\t\tthis.horizontalNavigationOn = autoNavigation || navigationMode === NavigationMode.Horizontal;\n\t\tthis.verticalNavigationOn = autoNavigation || navigationMode === NavigationMode.Vertical;\n\n\t\tthis.pageSize = options.pageSize;\n\n\t\tif (options.affectedPropertiesNames) {\n\t\t\tthis.affectedPropertiesNames = options.affectedPropertiesNames;\n\t\t}\n\n\t\tif (options.getItemsCallback) {\n\t\t\tthis._getItems = options.getItemsCallback;\n\t\t}\n\n\t\tconst trueFunction = () => true;\n\t\tthis._hasNextPage = typeof options.hasNextPageCallback === \"function\" ? options.hasNextPageCallback : trueFunction;\n\t\tthis._hasPreviousPage = typeof options.hasPreviousPageCallback === \"function\" ? options.hasPreviousPageCallback : trueFunction;\n\n\t\tthis.rootWebComponent = rootWebComponent;\n\t\tthis.rootWebComponent.addEventListener(\"keydown\", this.onkeydown.bind(this));\n\t\tthis.rootWebComponent._onComponentStateFinalized = () => {\n\t\t\tthis._init();\n\t\t};\n\t}\n\n\t_init() {\n\t\tthis._getItems().forEach((item, idx) => {\n\t\t\titem._tabIndex = (idx === this.currentIndex) ? \"0\" : \"-1\";\n\t\t});\n\t}\n\n\t_horizontalNavigationOn() {\n\t\treturn this.horizontalNavigationOn;\n\t}\n\n\t_verticalNavigationOn() {\n\t\treturn this.verticalNavigationOn;\n\t}\n\n\tasync _onKeyPress(event) {\n\t\tif (this.currentIndex >= this._getItems().length) {\n\t\t\tthis.onOverflowBottomEdge(event);\n\t\t} else if (this.currentIndex < 0) {\n\t\t\tthis.onOverflowTopEdge(event);\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tawait RenderScheduler.whenFinished();\n\n\t\tthis.update();\n\t\tthis.focusCurrent();\n\t\tthis.fireEvent(ItemNavigation.AFTER_FOCUS);\n\t}\n\n\tonkeydown(event) {\n\t\tif (isUp(event) && this._verticalNavigationOn()) {\n\t\t\treturn this._handleUp(event);\n\t\t}\n\n\t\tif (isDown(event) && this._verticalNavigationOn()) {\n\t\t\treturn this._handleDown(event);\n\t\t}\n\n\t\tif (isLeft(event) && this._horizontalNavigationOn()) {\n\t\t\treturn this._handleLeft(event);\n\t\t}\n\n\t\tif (isRight(event) && this._horizontalNavigationOn()) {\n\t\t\treturn this._handleRight(event);\n\t\t}\n\n\t\tif (isHome(event)) {\n\t\t\treturn this._handleHome(event);\n\t\t}\n\n\t\tif (isEnd(event)) {\n\t\t\treturn this._handleEnd(event);\n\t\t}\n\n\t\tif (isPageUp(event)) {\n\t\t\treturn this._handlePageUp(event);\n\t\t}\n\n\t\tif (isPageDown(event)) {\n\t\t\treturn this._handlePageDown(event);\n\t\t}\n\t}\n\n\t_handleUp(event) {\n\t\tif (this._canNavigate()) {\n\t\t\tthis.currentIndex -= this.rowSize;\n\t\t\tthis._onKeyPress(event);\n\t\t}\n\t}\n\n\t_handleDown(event) {\n\t\tif (this._canNavigate()) {\n\t\t\tthis.currentIndex += this.rowSize;\n\t\t\tthis._onKeyPress(event);\n\t\t}\n\t}\n\n\t_handleLeft(event) {\n\t\tif (this._canNavigate()) {\n\t\t\tthis.currentIndex -= 1;\n\t\t\tthis._onKeyPress(event);\n\t\t}\n\t}\n\n\t_handleRight(event) {\n\t\tif (this._canNavigate()) {\n\t\t\tthis.currentIndex += 1;\n\t\t\tthis._onKeyPress(event);\n\t\t}\n\t}\n\n\t_handleHome(event) {\n\t\tif (this._canNavigate()) {\n\t\t\tconst homeEndRange = this.rowSize > 1 ? this.rowSize : this._getItems().length;\n\t\t\tthis.currentIndex -= this.currentIndex % homeEndRange;\n\t\t\tthis._onKeyPress(event);\n\t\t}\n\t}\n\n\t_handleEnd(event) {\n\t\tif (this._canNavigate()) {\n\t\t\tconst homeEndRange = this.rowSize > 1 ? this.rowSize : this._getItems().length;\n\t\t\tthis.currentIndex += (homeEndRange - 1 - this.currentIndex % homeEndRange); // eslint-disable-line\n\t\t\tthis._onKeyPress(event);\n\t\t}\n\t}\n\n\t_handlePageUp(event) {\n\t\tif (this._canNavigate()) {\n\t\t\tthis.currentIndex -= this.pageSize;\n\t\t\tthis._onKeyPress(event);\n\t\t}\n\t}\n\n\t_handlePageDown(event) {\n\t\tif (this._canNavigate()) {\n\t\t\tthis.currentIndex += this.pageSize;\n\t\t\tthis._onKeyPress(event);\n\t\t}\n\t}\n\n\t/**\n\t * Call this method to set a new \"current\" (selected) item in the item navigation\n\t * Note: the item passed to this function must be one of the items, returned by the getItemsCallback function\n\t *\n\t * @public\n\t * @param current the new selected item\n\t */\n\tupdate(current) {\n\t\tconst origItems = this._getItems();\n\n\t\tif (current) {\n\t\t\tthis.currentIndex = this._getItems().indexOf(current);\n\t\t}\n\n\t\tif (!origItems[this.currentIndex]\n\t\t\t|| (origItems[this.currentIndex]._tabIndex && origItems[this.currentIndex]._tabIndex === \"0\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst items = origItems.slice(0);\n\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\titems[i]._tabIndex = (i === this.currentIndex ? \"0\" : \"-1\");\n\t\t}\n\n\t\tif (Array.isArray(this.affectedPropertiesNames)) {\n\t\t\tthis.affectedPropertiesNames.forEach(propName => {\n\t\t\t\tconst prop = this.rootWebComponent[propName];\n\t\t\t\tthis.rootWebComponent[propName] = Array.isArray(prop) ? [...prop] : { ...prop };\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @public\n\t * @deprecated\n\t */\n\tfocusCurrent() {\n\t\tconst currentItem = this._getCurrentItem();\n\t\tif (currentItem) {\n\t\t\tcurrentItem.focus();\n\t\t}\n\t}\n\n\t_canNavigate() {\n\t\tconst currentItem = this._getCurrentItem();\n\t\tconst activeElement = getActiveElement();\n\n\t\treturn currentItem && currentItem === activeElement;\n\t}\n\n\t_getCurrentItem() {\n\t\tconst items = this._getItems();\n\n\t\tif (!items.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// normalize the index\n\t\twhile (this.currentIndex >= items.length) {\n\t\t\tthis.currentIndex -= this.rowSize;\n\t\t}\n\n\t\tif (this.currentIndex < 0) {\n\t\t\tthis.currentIndex = 0;\n\t\t}\n\n\t\tconst currentItem = items[this.currentIndex];\n\n\t\tif (!currentItem) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (currentItem.isUI5Element) {\n\t\t\treturn currentItem.getFocusDomRef();\n\t\t}\n\n\t\tif (!this.rootWebComponent.getDomRef()) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.rootWebComponent.getDomRef().querySelector(`#${currentItem.id}`);\n\t}\n\n\t/**\n\t * Set to callback that returns the list of items to navigate among\n\t * @public\n\t * @param callback a function that returns an array of items to navigate among\n\t */\n\tset getItemsCallback(callback) {\n\t\tthis._getItems = callback;\n\t}\n\n\t/**\n\t * @public\n\t * @deprecated\n\t * @param val\n\t */\n\tset current(val) {\n\t\tthis.currentIndex = val;\n\t}\n\n\tonOverflowBottomEdge(event) {\n\t\tconst items = this._getItems();\n\t\tconst offset = (this.currentIndex - items.length) % this.rowSize;\n\n\t\tif (this.behavior === ItemNavigationBehavior.Cyclic) {\n\t\t\tthis.currentIndex = 0;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.behavior === ItemNavigationBehavior.Paging) {\n\t\t\tthis._handleNextPage();\n\t\t} else {\n\t\t\tthis.currentIndex = items.length - 1;\n\t\t}\n\n\t\tthis.fireEvent(ItemNavigation.BORDER_REACH, {\n\t\t\tstart: false,\n\t\t\tend: true,\n\t\t\toriginalEvent: event,\n\t\t\toffset,\n\t\t});\n\t}\n\n\tonOverflowTopEdge(event) {\n\t\tconst items = this._getItems();\n\t\tconst offsetRight = (this.currentIndex + this.rowSize) % this.rowSize;\n\t\tconst offset = offsetRight < 0 ? (this.rowSize + offsetRight) : offsetRight;\n\n\t\tif (this.behavior === ItemNavigationBehavior.Cyclic) {\n\t\t\tthis.currentIndex = items.length - 1;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.behavior === ItemNavigationBehavior.Paging) {\n\t\t\tthis._handlePrevPage();\n\t\t} else {\n\t\t\tthis.currentIndex = 0;\n\t\t}\n\n\t\tthis.fireEvent(ItemNavigation.BORDER_REACH, {\n\t\t\tstart: true,\n\t\t\tend: false,\n\t\t\toriginalEvent: event,\n\t\t\toffset,\n\t\t});\n\t}\n\n\t_handleNextPage() {\n\t\tconst items = this._getItems();\n\n\t\tif (!this._hasNextPage()) {\n\t\t\tthis.currentIndex = items.length - 1;\n\t\t} else {\n\t\t\tthis.currentIndex -= this.pageSize;\n\t\t}\n\t}\n\n\t_handlePrevPage() {\n\t\tif (!this._hasPreviousPage()) {\n\t\t\tthis.currentIndex = 0;\n\t\t} else {\n\t\t\tthis.currentIndex = this.pageSize + this.currentIndex;\n\t\t}\n\t}\n}\n\nItemNavigation.BORDER_REACH = \"_borderReach\";\nItemNavigation.AFTER_FOCUS = \"_afterFocus\";\n\nexport default ItemNavigation;\n","const NavigationMode = {\n\tAuto: \"Auto\",\n\tVertical: \"Vertical\",\n\tHorizontal: \"Horizontal\",\n\tPaging: \"Paging\",\n};\nexport default NavigationMode;\n","/**\n * @private\n * Different behavior for ItemNavigation.\n */\nconst ItemNavigationBehavior = {\n\t/**\n\t* Static behavior: when border of the items is reached, you can't go out of the cage.\n \t*/\n\tStatic: \"Static\",\n\n\t/**\n\t* Cycling behavior: when border of the items is reached, you can cycle through the items.\n \t*/\n\tCyclic: \"Cyclic\",\n\n\t/**\n\t* Paging behavior: when border of the items is reached, tou can go up/down based on the rowsize(e.g. DayPicker)\n \t*/\n\tPaging: \"Paging\",\n};\nexport default ItemNavigationBehavior;\n","import DataType from \"@ui5/webcomponents-base/dist/types/DataType.js\";\n\n/**\n * Different types of AvatarSize.\n * @lends sap.ui.webcomponents.main.types.AvatarSize.prototype\n * @public\n */\nconst AvatarSizes = {\n\t/**\n\t * component size - 2rem\n\t * font size - 1rem\n\t * @public\n\t * @type {XS}\n\t */\n\tXS: \"XS\",\n\n\t/**\n\t * component size - 3rem\n\t * font size - 1.5rem\n\t * @public\n\t * @type {S}\n\t */\n\tS: \"S\",\n\n\t/**\n\t * component size - 4rem\n\t * font size - 2rem\n\t * @public\n\t * @type {M}\n\t */\n\tM: \"M\",\n\n\t/**\n\t * component size - 5rem\n\t * font size - 2.5rem\n\t * @public\n\t * @type {L}\n\t */\n\tL: \"L\",\n\n\t/**\n\t * component size - 7rem\n\t * font size - 3rem\n\t * @public\n\t * @type {XL}\n\t */\n\tXL: \"XL\",\n};\n\n/**\n * @class\n * Different types of AvatarSize.\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.types.AvatarSize\n * @public\n * @enum {string}\n */\nclass AvatarSize extends DataType {\n\tstatic isValid(value) {\n\t\treturn !!AvatarSizes[value];\n\t}\n}\n\nAvatarSize.generateTypeAccessors(AvatarSizes);\n\nexport default AvatarSize;\n","import DataType from \"@ui5/webcomponents-base/dist/types/DataType.js\";\n\n/**\n * Different types of AvatarBackgroundColor.\n * @lends sap.ui.webcomponents.main.types.AvatarBackgroundColor.prototype\n * @public\n */\nconst AvatarBackGroundColors = {\n\t/**\n\t *\n\t * @public\n\t * @type {Accent1}\n\t */\n\tAccent1: \"Accent1\",\n\n\t/**\n\t *\n\t * @public\n\t * @type {Accent2}\n\t */\n\tAccent2: \"Accent2\",\n\n\t/**\n\t *\n\t * @public\n\t * @type {Accent3}\n\t */\n\tAccent3: \"Accent3\",\n\n\t/**\n\t *\n\t * @public\n\t * @type {Accent4}\n\t */\n\tAccent4: \"Accent4\",\n\n\t/**\n\t *\n\t * @public\n\t * @type {Accent5}\n\t */\n\tAccent5: \"Accent5\",\n\n\t/**\n\t *\n\t * @public\n\t * @type {Accent6}\n\t */\n\tAccent6: \"Accent6\",\n\n\t/**\n\t *\n\t * @public\n\t * @type {Accent7}\n\t */\n\tAccent7: \"Accent7\",\n\n\t/**\n\t *\n\t * @public\n\t * @type {Accent8}\n\t */\n\tAccent8: \"Accent8\",\n\n\t/**\n\t *\n\t * @public\n\t * @type {Accent9}\n\t */\n\tAccent9: \"Accent9\",\n\n\t/**\n\t *\n\t * @public\n\t * @type {Accent10}\n\t */\n\tAccent10: \"Accent10\",\n\n\t/**\n\t *\n\t * @public\n\t * @type {Placeholder}\n\t */\n\tPlaceholder: \"Placeholder\",\n};\n\n/**\n * @class\n * Different types of AvatarBackgroundColor.\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.types.AvatarBackgroundColor\n * @public\n * @enum {string}\n */\nclass AvatarBackgroundColor extends DataType {\n\tstatic isValid(value) {\n\t\treturn !!AvatarBackGroundColors[value];\n\t}\n}\n\nAvatarBackgroundColor.generateTypeAccessors(AvatarBackGroundColors);\n\nexport default AvatarBackgroundColor;\n","\n/* eslint no-unused-vars: 0 */\nimport ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';\nimport { html, svg, repeat, classMap, styleMap, unsafeHTML, setTags, setSuffix } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';\nconst block0 = (context) => { return html`<div class=\"ui5-avatar-group-root\"><div class=\"ui5-avatar-group-items\" @keyup=\"${context._onkeyup}\" @keydown=\"${context._onkeydown}\" @focusin=\"${context._onfocusin}\" tabindex=\"${ifDefined(context._groupTabIndex)}\" @click=\"${context._onGroupClick}\" @ui5-click=\"${ifDefined(context._onUI5Click)}\"><slot></slot><ui5-button ?hidden=\"${context._overflowBtnHidden}\" tabindex=\"${ifDefined(context._overflowButtonTabIndex)}\" class=\"ui5-avatar-group-overflow-btn\">${ifDefined(context._overflowButtonText)}</ui5-button></div></div>`; };\n\n\nconst main = (context, tags, suffix) => {\n\tsetTags(tags);\n\tsetSuffix(suffix);\n\treturn block0(context);\n};\n \nexport default main;","import { registerThemeProperties } from \"@ui5/webcomponents-base/dist/asset-registries/Themes.js\";\n\nimport defaultThemeBase from \"@ui5/webcomponents-theme-base/dist/generated/themes/sap_fiori_3/parameters-bundle.css.js\";\nimport defaultTheme from \"./sap_fiori_3/parameters-bundle.css.js\";\n\nregisterThemeProperties(\"@ui5/webcomponents-theme-base\", \"sap_fiori_3\", defaultThemeBase);\nregisterThemeProperties(\"@ui5/webcomponents\", \"sap_fiori_3\", defaultTheme);\nexport default \":host(:not([hidden])){display:block}.ui5-avatar-group-items:focus{outline:none}:host([type=Group]) .ui5-avatar-group-items:focus{outline:var(--_ui5_avatar_outline);outline-offset:var(--_ui5_avatar_focus_offset)}.ui5-avatar-group-root{display:flex}.ui5-avatar-group-items{white-space:nowrap;position:relative;display:inline-flex}:host([type=Group]) .ui5-avatar-group-items{cursor:pointer}:host([type=Group]) ::slotted(ui5-avatar){pointer-events:none}.ui5-avatar-group-overflow-btn:not([hidden]){border-radius:50%;display:inline-flex;text-overflow:unset}.ui5-avatar-group-overflow-btn[focused]{outline:var(--_ui5_button_outline);outline-offset:var(--_ui5_avatar_group_overflow_button_focus_offset)}:host([avatar-size=XS]) .ui5-avatar-group-overflow-btn{height:2rem;width:2rem;min-width:2rem;font-size:.75rem}:host([avatar-size=S]) .ui5-avatar-group-overflow-btn{height:3rem;width:3rem;min-width:3rem;font-size:1.125rem}:host([avatar-size=M]) .ui5-avatar-group-overflow-btn{height:4rem;width:4rem;min-width:4rem;font-size:1.625rem}:host([avatar-size=L]) .ui5-avatar-group-overflow-btn{height:5rem;width:5rem;min-width:5rem;font-size:2rem}:host([avatar-size=XL]) .ui5-avatar-group-overflow-btn{height:7rem;width:7rem;min-width:7rem;font-size:2.75rem}\";","import DataType from \"@ui5/webcomponents-base/dist/types/DataType.js\";\n\n/**\n * Different types of AvatarGroupType.\n * @lends sap.ui.webcomponents.main.types.AvatarGroupType.prototype\n * @public\n */\nconst AvatarGroupTypes = {\n\t/**\n\t * The avatars are displayed as partially overlapped on top of each other and the entire group has one click/tap area.\n\t *\n\t * @public\n\t * @type {Group}\n\t */\n\tGroup: \"Group\",\n\n\t/**\n\t * The avatars are displayed side-by-side and each avatar has its own click/tap area.\n\t *\n\t * @public\n\t * @type {Individual}\n\t */\n\tIndividual: \"Individual\",\n};\n\n/**\n * @class\n * Different types of AvatarGroupType.\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.types.AvatarGroupType\n * @public\n * @enum {string}\n */\nclass AvatarGroupType extends DataType {\n\tstatic isValid(value) {\n\t\treturn !!AvatarGroupTypes[value];\n\t}\n}\n\nAvatarGroupType.generateTypeAccessors(AvatarGroupTypes);\n\nexport default AvatarGroupType;\n","import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport ItemNavigation from \"@ui5/webcomponents-base/dist/delegate/ItemNavigation.js\";\nimport {\n\tisEnter,\n\tisSpace,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\n\n// Template\nimport AvatarGroupTemplate from \"./generated/templates/AvatarGroupTemplate.lit.js\";\n// Styles\nimport AvatarGroupCss from \"./generated/themes/AvatarGroup.css.js\";\n\nimport Button from \"./Button.js\";\nimport AvatarSize from \"./types/AvatarSize.js\";\nimport AvatarGroupType from \"./types/AvatarGroupType.js\";\nimport AvatarBackgroundColor from \"./types/AvatarBackgroundColor.js\";\n\nconst OVERFLOW_BTN_CLASS = \"ui5-avatar-group-overflow-btn\";\nconst AVATAR_GROUP_OVERFLOW_BTN_SELECTOR = `.${OVERFLOW_BTN_CLASS}`;\n\n// based on RTL/LTR a margin-left/right is set respectfully\nconst offsets = {\n\t[AvatarSize.XS]: {\n\t\t[AvatarGroupType.Individual]: \"0.0625rem\",\n\t\t[AvatarGroupType.Group]: \"-0.75rem\",\n\t},\n\t[AvatarSize.S]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \"-1.25rem\",\n\t},\n\t[AvatarSize.M]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \"-1.62rem\",\n\t},\n\t[AvatarSize.L]: {\n\t\t[AvatarGroupType.Individual]: \"0.125rem\",\n\t\t[AvatarGroupType.Group]: \" -2rem\",\n\t},\n\t[AvatarSize.XL]: {\n\t\t[AvatarGroupType.Individual]: \"0.25rem\",\n\t\t[AvatarGroupType.Group]: \"-2.7rem\",\n\t},\n};\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-avatar-group\",\n\tmanagedSlots: true,\n\tproperties: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */  {\n\n\t\t/**\n\t \t * Defines the mode of the <code>AvatarGroup</code>.\n\t\t * <br><br>\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>Group</code></li>\n\t\t * <li><code>Individual</code></li>\n\t\t * <ul>\n\t\t * @type {AvatarGroupType}\n\t\t * @defaultValue \"Group\"\n\t\t * @public\n\t\t */\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: AvatarGroupType.Group,\n\t\t},\n\n\t\t/**\n\t\t * Defines predefined size of the <code>ui5-avatar</code>.\n\t\t * <br><br>\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>XS</code></li>\n\t\t * <li><code>S</code></li>\n\t\t * <li><code>M</code></li>\n\t\t * <li><code>L</code></li>\n\t\t * <li><code>XL</code></li>\n\t\t * <ul>\n\t\t * @type {AvatarSize}\n\t\t * @defaultValue \"S\"\n\t\t * @public\n\t\t */\n\t\tavatarSize: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: AvatarSize.S,\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_overflowButtonText: {\n\t\t\ttype: String,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t},\n\tslots: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */ {\n\t\t/**\n\t\t * Defines the items of the <code>ui5-avatar-group</code>.\n\t\t * @type {HTMLElement[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\ttype: HTMLElement,\n\t\t\tpropertyName: \"items\",\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.AvatarGroup.prototype */ {\n\t\t/**\n\t\t* Fired when the <code>ui5-avatar-group</code> is activated either with a\n\t\t* click/tap or by using the Enter or Space key.\n\t\t* @param {HTMLElement} targetRef The DOM ref of the clicked item.\n\t\t* @param {boolean} overflowButtonClicked indicates if the overflow button is clicked\n\t\t* @event\n\t\t* @public\n\t\t* @since 1.0.0-rc.11\n\t\t*/\n\t   click: {\n\t\t\tdetail: {\n\t\t\t\ttargetRef: { type: HTMLElement },\n\t\t\t\toverflowButtonClicked: { type: Boolean },\n\t\t\t},\n\t\t},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * Displays a group of avatars arranged horizontally. It is useful to visually\n * showcase a group of related avatars, such as, project team members or employees.\n *\n * The component allows you to display the avatars in different sizes,\n * depending on your use case.\n *\n * The <code>AvatarGroup</code> component has two group types:\n * <ul>\n * <li><code>Group</code> type: The avatars are displayed as partially overlapped on\n * top of each other and the entire group has one click/tap area.</li>\n * <li><code>Individual</code> type: The avatars are displayed side-by-side and each\n * avatar has its own click/tap area.</li>\n * </ul>\n *\n * <h3>Responsive Behavior</h3>\n *\n * When the available space is less than the width required to display all avatars,\n * an overflow visualization appears as a button placed at the end with the same shape\n * and size as the avatars. The visualization displays the number of avatars that have overflowed\n * and are not currently visible.\n *\n * <h3>Usage</h3>\n *\n * Use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a group of avatars.</li>\n * <li>You want to display several avatars which have something in common.</li>\n * </ul>\n *\n * Do not use the <code>AvatarGroup</code> if:\n * <ul>\n * <li>You want to display a single avatar.</li>\n * <li>You want to display a gallery for simple images.</li>\n * <li>You want to use it for other visual content than avatars.</li>\n * </ul>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.AvatarGroup\n * @extends UI5Element\n * @tagname ui5-avatar-group\n * @since 1.0.0-rc.11\n * @public\n */\nclass AvatarGroup extends UI5Element {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._itemNavigation = new ItemNavigation(this, {\n\t\t\tgetItemsCallback: () => {\n\t\t\t\treturn this._isGroup ? [] : this.items.slice(0, this._hiddenStartIndex);\n\t\t\t},\n\t\t});\n\n\t\tthis._colorIndex = 0;\n\t\tthis._hiddenItems = 0;\n\t\tthis._onResizeHandler = this._onResize.bind(this);\n\t}\n\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn AvatarGroupTemplate;\n\t}\n\n\tstatic get styles() {\n\t\treturn AvatarGroupCss;\n\t}\n\n\tstatic get dependencies() {\n\t\treturn [\n\t\t\tButton,\n\t\t];\n\t}\n\n\t/**\n\t * Returns an array containing the ui5-avatar instances that are currently not displayed due to lack of space.\n\t * @readonly\n\t * @type { Array }\n\t * @defaultValue []\n\t * @public\n\t */\n\tget hiddenItems() {\n\t\treturn this.items.slice(this._hiddenStartIndex);\n\t}\n\n\t/**\n\t * Returns an array containing the <code>AvatarBackgroundColor</code> values that correspond to the avatars in the <code>items</code> array.\n\t * @readonly\n\t * @type { Array }\n\t * @defaultValue []\n\t * @public\n\t */\n\tget colorScheme() {\n\t\treturn this.items.map(avatar => avatar._effectiveBackgroundColor);\n\t}\n\n\tget _hiddenStartIndex() {\n\t\treturn this._itemsCount - this._hiddenItems;\n\t}\n\n\tget _overflowBtnHidden() {\n\t\treturn this._hiddenItems === 0;\n\t}\n\n\tget _isGroup() {\n\t\treturn this.type === AvatarGroupType.Group;\n\t}\n\n\tget _itemsCount() {\n\t\treturn this.items.length;\n\t}\n\n\tget _groupTabIndex() {\n\t\treturn this._isGroup ? \"0\" : \"-1\";\n\t}\n\n\tget _overflowButtonTabIndex() {\n\t\treturn this._isGroup ? \"-1\" : false;\n\t}\n\n\tget _overflowButton() {\n\t\treturn this.shadowRoot.querySelector(AVATAR_GROUP_OVERFLOW_BTN_SELECTOR);\n\t}\n\n\t/**\n\t * Return the effective overflow button width\n\t * Differences are that when in \"Group\" type the button is offset and overlaps the avatars\n\t *\n\t * 1) In case of \"Group\", (LTR/RTL aware) button width is qual to second item offset left/right\n\t * 2) In case of \"Individual\" group type width is directly taken from button element\n\t * @private\n\t */\n\tget _overflowButtonEffectiveWidth() {\n\t\t// if in \"Group\" mode overflow button size is equal to the offset from second item\n\t\tif (this._isGroup) {\n\t\t\tlet item = this.items[1];\n\n\t\t\t// in some cases when second avatar is overflowed the offset of the button is the right one\n\t\t\tif (!item || item.hidden) {\n\t\t\t\titem = this._overflowButton;\n\t\t\t}\n\n\t\t\treturn this.effectiveDir === \"rtl\" ? this._getWidthToItem(item) : item.offsetLeft;\n\t\t}\n\n\t\treturn this._overflowButton.offsetWidth;\n\t}\n\n\tonAfterRendering() {\n\t\tthis._overflowItems();\n\t}\n\n\tonBeforeRendering() {\n\t\tthis._prepareAvatars();\n\t}\n\n\tonEnterDOM() {\n\t\tResizeHandler.register(this, this._onResizeHandler);\n\t}\n\n\tonExitDOM() {\n\t\tResizeHandler.deregister(this, this._onResizeHandler);\n\t}\n\n\t_onResize() {\n\t\tthis._overflowItems();\n\t}\n\n\t_onkeydown(event) {\n\t\tif (isEnter(event)) {\n\t\t\tthis._fireGroupEvent(event.target);\n\t\t}\n\n\t\tif (isSpace(event)) {\n\t\t\t// prevent scrolling\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t_onkeyup(event) {\n\t\tif (!event.shiftKey && isSpace(event)) {\n\t\t\tevent.preventDefault();\n\t\t\tthis._fireGroupEvent(event.target);\n\t\t}\n\t}\n\n\t_fireGroupEvent(targetRef) {\n\t\tconst isOverflowButtonClicked = targetRef.classList.contains(OVERFLOW_BTN_CLASS);\n\n\t\tthis.fireEvent(\"click\", {\n\t\t\ttargetRef,\n\t\t\toverflowButtonClicked: isOverflowButtonClicked,\n\t\t});\n\t}\n\n\t_onGroupClick(event) {\n\t\tevent.stopPropagation();\n\t\tif (event.isMarked === \"avatar\" || event.isMarked === \"button\" || this._isGroup) {\n\t\t\tthis._fireGroupEvent(event.target);\n\t\t}\n\t}\n\n\t_onUI5Click(event) {\n\t\tevent.stopPropagation();\n\t}\n\n\t/**\n\t * Modifies avatars to the needs of avatar group properties. Respects already set size and background color.\n\t * Set the margins (offsets) based on RTL/LTR.\n\t * @private\n\t */\n\t_prepareAvatars() {\n\t\tconst RTL = this.effectiveDir === \"rtl\";\n\t\tthis._colorIndex = 0;\n\n\t\tthis.items.forEach((avatar, index) => {\n\t\t\tconst colorIndex = this._getNextBackgroundColor();\n\t\t\tavatar.interactive = !this._isGroup;\n\n\t\t\tif (!avatar.getAttribute(\"background-color\")) {\n\t\t\t\t// AvatarGroup respects colors set to ui5-avatar\n\t\t\t\tavatar.setAttribute(\"_background-color\", AvatarBackgroundColor[`Accent${colorIndex}`]);\n\t\t\t}\n\n\t\t\tif (!avatar.getAttribute(\"size\")) {\n\t\t\t\t// AvatarGroup respects sizes set to ui5-avatar\n\t\t\t\tavatar.setAttribute(\"_size\", this.avatarSize);\n\t\t\t}\n\n\t\t\t// last avatar should not be offset as it breaks the container width and focus styles are no set correctly\n\t\t\tif (index !== this._itemsCount - 1) {\n\t\t\t\t// based on RTL margin left or right is set to avatars\n\t\t\t\tavatar.style[`margin-${RTL ? \"left\" : \"right\"}`] = offsets[avatar._effectiveSize][this.type];\n\t\t\t}\n\t\t});\n\t}\n\n\t_onfocusin(event) {\n\t\tconst target = event.target;\n\t\tthis._itemNavigation.update(target);\n\t}\n\n\t/**\n\t * Returns the total width to item excluding the item width\n\t * RTL/LTR aware\n\t * @private\n\t * @param {HTMLElement} item\n\t */\n\t_getWidthToItem(item) {\n\t\tconst isRTL = this.effectiveDir === \"rtl\";\n\n\t\tif (isRTL) {\n\t\t\t// in RTL the total width is equal to difference of the parent container width and\n\t\t\t// how much is the item offset to the left minus its offsetWidth\n\t\t\treturn item.offsetParent.offsetWidth - item.offsetLeft - item.offsetWidth;\n\t\t}\n\n\t\t// in LTR the width is equal to item.offsetLeft\n\t\treturn item.offsetLeft;\n\t}\n\n\t/**\n\t * Overflows items that were not able to fit the container\n\t * @private\n\t */\n\t_overflowItems() {\n\t\tif (this.items.length < 2) {\n\t\t\t// no need to overflow avatars\n\t\t\treturn;\n\t\t}\n\n\t\tlet hiddenItems = 0;\n\n\t\tfor (let index = 0; index < this._itemsCount; index++) {\n\t\t\tconst item = this.items[index];\n\n\t\t\t// show item to determine if it will fit the new container size\n\t\t\titem.hidden = false;\n\n\t\t\t// container width to current item + item width (avatar)\n\t\t\t// used to determine whether the following items will fit the container or not\n\t\t\tlet totalWidth = this._getWidthToItem(item) + item.offsetWidth;\n\n\t\t\tif (index !== this._itemsCount - 1) {\n\t\t\t\ttotalWidth += this._overflowButtonEffectiveWidth;\n\t\t\t}\n\n\t\t\tif (totalWidth > this.offsetWidth) {\n\t\t\t\thiddenItems = this._itemsCount - index;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// hide the items that did not fit the container size\n\t\tthis._setHiddenItems(hiddenItems);\n\t}\n\n\t_getNextBackgroundColor() {\n\t\t// counter is to automatically assign background colors to avatars, `Accent10` is the highest color value\n\t\tif (++this._colorIndex > 10) {\n\t\t\tthis._colorIndex = 1;\n\t\t}\n\t\treturn this._colorIndex;\n\t}\n\n\t_setHiddenItems(hiddenItems) {\n\t\tthis._hiddenItems = hiddenItems;\n\n\t\tthis.items.forEach((item, index) => {\n\t\t\titem.hidden = index >= this._hiddenStartIndex;\n\t\t});\n\n\t\tthis._overflowButtonText = `+${hiddenItems > 99 ? 99 : hiddenItems}`;\n\t}\n}\n\nAvatarGroup.define();\n\nexport default AvatarGroup;\n"],"sourceRoot":""}